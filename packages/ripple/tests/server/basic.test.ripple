import { describe, it, expect } from 'vitest';
import { render } from 'ripple/server';

describe('basic client', () => {
	it('render static text', async () => {
		component Basic() {
			<div>{'Hello World'}</div>
		}

		const { head, body } = await render(Basic);

		expect(head).toBe('');
		expect(body).toBe('<div>Hello World</div>');
	});

	it('handles multiple components with inline styles in single file', async () => {
		component ComponentA() {
			<div class="box-a">{'Component A'}</div>

			<style>
				.box-a {
					background-color: red;
					padding: 10px;
				}
			</style>
		}

		component ComponentB() {
			<div class="box-b">{'Component B'}</div>

			<style>
				.box-b {
					background-color: blue;
					padding: 20px;
				}
			</style>
		}

		component App() {
			<div>
				<ComponentA />
				<ComponentB />
			</div>
		}

		const { head, body, css } = await render(App);

		expect(body).toContain('Component A');
		expect(body).toContain('Component B');
		expect(body).toContain('box-a');
		expect(body).toContain('box-b');

		// Check that both CSS hashes are tracked
		expect(css.size).toBe(2);

		// Both hashes should be in the set
		const cssArray = Array.from(css);
		expect(cssArray.length).toBe(2);
		expect(cssArray.some((hash) => body.includes(hash))).toBe(true);
	});
});
