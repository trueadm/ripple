import { compile } from 'ripple/compiler';

describe('compiler > typescript', () => {
	it('compiles TSInstantiationExpression', () => {
		const source =
`function makeBox<T>(value: T) {
	return { value };
}
const makeStringBox = makeBox<string>;
const stringBox = makeStringBox('abc');
const ErrorMap = Map<string, Error>;
const errorMap = new ErrorMap();`;

		const result = compile(source, 'test.ripple', { mode: 'client' });

		expect(result.js.code).toMatchSnapshot();
	});

	it('removes type assertions from function parameters and leaves default values', () => {
		const source = `
function getString(e: string = 'test') {
	return e;
}`;

		const result = compile(source, 'test.ripple', { mode: 'client' });

		expect(result.js.code).toMatchSnapshot();
	});
});
