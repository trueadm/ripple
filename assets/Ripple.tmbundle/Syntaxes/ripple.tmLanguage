<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
    "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>information_for_contributors</key>
        <array>
            <string>
                This file has been converted from
                https://github.com/microsoft/TypeScript-TmLanguage/blob/master/TypeScriptReact.tmLanguage
            </string>
            <string>
                If you want to provide a fix or improvement, please create a
                pull request against the original repository.
            </string>
            <string>
                Once accepted there, we are happy to receive an update request.
            </string>
        </array>
        <key>version</key>
        <string>
            https://github.com/microsoft/TypeScript-TmLanguage/commit/48f608692aa6d6ad7bd65b478187906c798234a8
        </string>
        <key>name</key>
        <string>Ripple</string>
        <key>scopeName</key>
        <string>source.ripple</string>
        <key>fileTypes</key>
        <array>
        		<string>ripple</string>
				</array>
        <key>patterns</key>
        <array>
            <dict>
                <key>include</key>
                <string>#directives</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#statements</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#shebang</string>
            </dict>
        </array>
        <key>repository</key>
        <dict>
            <key>shebang</key>
            <dict>
                <key>name</key>
                <string>comment.line.shebang.js</string>
                <key>match</key>
                <string>\A(#!).*(?=$)</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.comment.js</string>
                    </dict>
                </dict>
            </dict>
            <key>statements</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#control-statement</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#after-operator-block-as-object-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decl-block</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#label</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-semicolon</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                </array>
            </dict>
            <key>component-statements</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-control-statement</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-decl-block</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#label</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-semicolon</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                </array>
            </dict>
            <key>declaration</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#decorator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#var-expr</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#server-block</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#fragment-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#interface-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#enum-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#namespace-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-alias-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#import-equals-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#import-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#export-declaration</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(declare|export)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                </array>
            </dict>
            <key>control-statement</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#switch-statement</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#for-loop</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.trycatch.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(break|continue|goto)\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.loop.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.label.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.loop.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(return)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.flow.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>
                            (?=[;}]|$|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.switch.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#if-statement</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.conditional.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(else|if)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.with.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(with)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(package)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.debugger.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(debugger)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                </array>
            </dict>
            <key>component-control-statement</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#component-switch-statement</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#for-loop</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.trycatch.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(catch|finally|pending|throw|try)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(break|continue|goto)\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.loop.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.label.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.loop.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(return)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.flow.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>
                            (?=[;}]|$|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.switch.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-if-statement</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.conditional.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(else|if)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.with.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(with)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(package)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.debugger.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(debugger)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                </array>
            </dict>
            <key>label</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>
                            ([_$[:alpha:]][_$[:alnum:]]*)\s*(:)(?=\s*\{)
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.label.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.separator.label.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#decl-block</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)\s*(:)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.label.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.separator.label.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>expression</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#non-jsx-expression</string>
                    </dict>
                </array>
            </dict>
            <key>expressionWithoutIdentifiers</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#regex</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#eval-expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#arrow-function</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#paren-expression-possibly-arrow</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#cast</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#ternary-expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#new-expr</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#instanceof-expr</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#tuple-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#record-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expression-operators</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-call</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#support-objects</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#paren-expression</string>
                    </dict>
                </array>
            </dict>
            <key>expressionPunctuations</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-accessor</string>
                    </dict>
                </array>
            </dict>
            <key>decorator</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.unbox.tracked.paren.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(\@)(\()</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.identifier.tracked.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(@)([_$[:alpha:]][_$[:alnum:]]*)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.decorator.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))\@(?![_$[:alpha:]])</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.decorator.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\s)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>var-expr</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.var.expr.js</string>
                        <key>begin</key>
                        <string
                        >(?=(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(var|let)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))</string>
                        <key>end</key>
                        <string
                        >(?!(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(var|let)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))((?=^|;|}|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))|(?=\s*$))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(var|let)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.export.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>storage.modifier.js</string>
                                    </dict>
                                    <key>3</key>
                                    <dict>
                                        <key>name</key>
                                        <string>storage.type.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?=\S)</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#destructuring-variable</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#var-single-variable</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#variable-initializer</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>(,)\s*(?=$|\/\/)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.separator.comma.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string
                                >(?&lt;!,)(((?==|;|}|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|^\s*$))|((?&lt;=\S)(?=\s*$)))</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>
                                            #single-line-comment-consuming-line-ending
                                        </string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#comment</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#destructuring-variable</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#var-single-variable</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#punctuation-comma</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#punctuation-comma</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.var.expr.js</string>
                        <key>begin</key>
                        <string
                        >(?=(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(const(?!\s+enum\b))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?!(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(const(?!\s+enum\b))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))((?=^|;|}|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))|(?=\s*$))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(const(?!\s+enum\b))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.export.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>storage.modifier.js</string>
                                    </dict>
                                    <key>3</key>
                                    <dict>
                                        <key>name</key>
                                        <string>storage.type.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?=\S)</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#destructuring-const</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#var-single-const</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#variable-initializer</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>(,)\s*(?=$|\/\/)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.separator.comma.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string
                                >(?&lt;!,)(((?==|;|}|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|^\s*$))|((?&lt;=\S)(?=\s*$)))</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>
                                            #single-line-comment-consuming-line-ending
                                        </string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#comment</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#destructuring-const</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#var-single-const</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#punctuation-comma</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#punctuation-comma</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.var.expr.js</string>
                        <key>begin</key>
                        <string
                        >(?=(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b((?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?!(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b((?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))((?=;|}|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))|(?=\s*$))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b((?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.export.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>storage.modifier.js</string>
                                    </dict>
                                    <key>3</key>
                                    <dict>
                                        <key>name</key>
                                        <string>storage.type.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?=\S)</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#var-single-const</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#variable-initializer</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>(,)\s*((?!\S)|(?=\/\/))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.separator.comma.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string
                                >(?&lt;!,)(((?==|;|}|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|^\s*$))|((?&lt;=\S)(?=\s*$)))</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>
                                            #single-line-comment-consuming-line-ending
                                        </string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#comment</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#var-single-const</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#punctuation-comma</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#punctuation-comma</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>var-single-variable</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.var-single-variable.expr.js</string>
                        <key>begin</key>
                        <string>(?x)([_$[:alpha:]][_$[:alnum:]]*)(\!)?(?=\s*
# function assignment |
(=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)) |
# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;
(:\s*(
  (&lt;) |
  ([(]\s*(
    ([)]) |
    (\.\.\.) |
    ([_$[:alnum:]]+\s*(
      ([:,?=])|
      ([)]\s*=&gt;)
    ))
  ))
)) |
(:\s*(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Function(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))) |
(:\s*((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*))))))) |
(:\s*(=&gt;|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.definition.variable.js
                                    entity.name.function.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.definiteassignment.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|(;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #var-single-variable-type-annotation
                                </string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.var-single-variable.expr.js</string>
                        <key>begin</key>
                        <string>
                            ([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])(\!)?
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.definition.variable.js
                                    variable.other.constant.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.definiteassignment.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|(;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #var-single-variable-type-annotation
                                </string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.var-single-variable.expr.js</string>
                        <key>begin</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)(\!)?</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.definition.variable.js
                                    variable.other.readwrite.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.definiteassignment.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|(;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #var-single-variable-type-annotation
                                </string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>var-single-const</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.var-single-variable.expr.js</string>
                        <key>begin</key>
                        <string>(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\s*
# function assignment |
(=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)) |
# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;
(:\s*(
  (&lt;) |
  ([(]\s*(
    ([)]) |
    (\.\.\.) |
    ([_$[:alnum:]]+\s*(
      ([:,?=])|
      ([)]\s*=&gt;)
    ))
  ))
)) |
(:\s*(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Function(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))) |
(:\s*((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*))))))) |
(:\s*(=&gt;|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.definition.variable.js
                                    variable.other.constant.js
                                    entity.name.function.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|(;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #var-single-variable-type-annotation
                                </string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.var-single-variable.expr.js</string>
                        <key>begin</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.definition.variable.js
                                    variable.other.constant.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+)|(;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #var-single-variable-type-annotation
                                </string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>var-single-variable-type-annotation</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                </array>
            </dict>
            <key>destructuring-variable</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.object-binding-pattern-variable.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;!=|:|^of|[^\._$[:alnum:]]of|^in|[^\._$[:alnum:]]in)\s*(?=\{)</string>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#object-binding-pattern</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-annotation</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.array-binding-pattern-variable.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;!=|:|^of|[^\._$[:alnum:]]of|^in|[^\._$[:alnum:]]in)\s*(?=\[)</string>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#array-binding-pattern</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-annotation</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>destructuring-const</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.object-binding-pattern-variable.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;!=|:|^of|[^\._$[:alnum:]]of|^in|[^\._$[:alnum:]]in)\s*(?=\{)</string>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#object-binding-pattern-const</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-annotation</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.array-binding-pattern-variable.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;!=|:|^of|[^\._$[:alnum:]]of|^in|[^\._$[:alnum:]]in)\s*(?=\[)</string>
                        <key>end</key>
                        <string
                        >(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#array-binding-pattern-const</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-annotation</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>object-binding-element</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?x)(?=((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(:))</string>
                        <key>end</key>
                        <string>(?=,|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #object-binding-element-propertyName
                                </string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#binding-element</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-binding-pattern</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-variable-rest</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>object-binding-element-const</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?x)(?=((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(:))</string>
                        <key>end</key>
                        <string>(?=,|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #object-binding-element-propertyName
                                </string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#binding-element-const</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-binding-pattern-const</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-variable-rest-const</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>object-binding-element-propertyName</key>
            <dict>
                <key>begin</key>
                <string
                >(?x)(?=((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(:))</string>
                <key>end</key>
                <string>(:)</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.destructuring.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#array-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#tuple-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>variable.object.property.js</string>
                        <key>match</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                    </dict>
                </array>
            </dict>
            <key>binding-element</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#regex</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-binding-pattern</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#array-binding-pattern</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-variable-rest</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                </array>
            </dict>
            <key>binding-element-const</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#regex</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-binding-pattern-const</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#array-binding-pattern-const</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-variable-rest-const</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                </array>
            </dict>
            <key>destructuring-variable-rest</key>
            <dict>
                <key>match</key>
                <string>(?:(\.\.\.)\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.variable.js
                            variable.other.readwrite.js
                        </string>
                    </dict>
                </dict>
            </dict>
            <key>destructuring-variable-rest-const</key>
            <dict>
                <key>match</key>
                <string>(?:(\.\.\.)\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.variable.js
                            variable.other.constant.js
                        </string>
                    </dict>
                </dict>
            </dict>
            <key>object-binding-pattern</key>
            <dict>
                <key>begin</key>
                <string>(?:(\.\.\.)\s*)?(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.object.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.object.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#object-binding-element</string>
                    </dict>
                </array>
            </dict>
            <key>object-binding-pattern-const</key>
            <dict>
                <key>begin</key>
                <string>(?:(\.\.\.)\s*)?(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.object.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.object.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#object-binding-element-const</string>
                    </dict>
                </array>
            </dict>
            <key>array-binding-pattern</key>
            <dict>
                <key>begin</key>
                <string>(?:(\.\.\.)\s*)?(\[)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.array.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.array.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#binding-element</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>array-binding-pattern-const</key>
            <dict>
                <key>begin</key>
                <string>(?:(\.\.\.)\s*)?(\[)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.array.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.array.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#binding-element-const</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>parameter-name</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(override|public|protected|private|readonly)\s+(?=(override|public|protected|private|readonly)\s+)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(override|public|private|protected|readonly)\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*(\??)(?=\s*
# function assignment |
(=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)) |
# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;
(:\s*(
  (&lt;) |
  ([(]\s*(
    ([)]) |
    (\.\.\.) |
    ([_$[:alnum:]]+\s*(
      ([:,?=])|
      ([)]\s*=&gt;)
    ))
  ))
)) |
(:\s*(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Function(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))) |
(:\s*((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*))))))) |
(:\s*(=&gt;|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.name.function.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.function.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(override|public|private|protected|readonly)\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*(\??)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.parameter.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>variable.parameter.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>destructuring-parameter</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.parameter.object-binding-pattern.js
                        </string>
                        <key>begin</key>
                        <string>(?&lt;!=|:)\s*(?:(\.\.\.)\s*)?(\{)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.binding-pattern.object.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\}</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.binding-pattern.object.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #parameter-object-binding-element
                                </string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.parameter.array-binding-pattern.js</string>
                        <key>begin</key>
                        <string>(?&lt;!=|:)\s*(?:(\.\.\.)\s*)?(\[)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.binding-pattern.array.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\]</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.binding-pattern.array.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#parameter-binding-element</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#punctuation-comma</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>parameter-object-binding-element</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?x)(?=((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(:))</string>
                        <key>end</key>
                        <string>(?=,|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #object-binding-element-propertyName
                                </string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#parameter-binding-element</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#paren-expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#parameter-object-binding-pattern</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-parameter-rest</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>parameter-binding-element</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#regex</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#parameter-object-binding-pattern</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#parameter-array-binding-pattern</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-parameter-rest</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                </array>
            </dict>
            <key>destructuring-parameter-rest</key>
            <dict>
                <key>match</key>
                <string>(?:(\.\.\.)\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>variable.parameter.js</string>
                    </dict>
                </dict>
            </dict>
            <key>parameter-object-binding-pattern</key>
            <dict>
                <key>begin</key>
                <string>(?:(\.\.\.)\s*)?(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.object.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.object.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#parameter-object-binding-element</string>
                    </dict>
                </array>
            </dict>
            <key>parameter-array-binding-pattern</key>
            <dict>
                <key>begin</key>
                <string>(?:(\.\.\.)\s*)?(\[)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.array.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.binding-pattern.array.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#parameter-binding-element</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>field-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.field.declaration.js</string>
                <key>begin</key>
                <string
                >(?x)(?&lt;!\()(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(readonly)\s+)?(?=\s*((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|(\#?[_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(?:(?:(\?)|(\!))\s*)?(=|:|;|,|\}|$))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?x)(?=\}|;|,|$|(^(?!\s*((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|(\#?[_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(?:(?:(\?)|(\!))\s*)?(=|:|;|,|$))))|(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#array-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#tuple-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(\#?[_$[:alpha:]][_$[:alnum:]]*)(?:(\?)|(\!))?(?=\s*\s*
# function assignment |
(=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)) |
# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;
(:\s*(
  (&lt;) |
  ([(]\s*(
    ([)]) |
    (\.\.\.) |
    ([_$[:alnum:]]+\s*(
      ([:,?=])|
      ([)]\s*=&gt;)
    ))
  ))
)) |
(:\s*(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Function(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))) |
(:\s*((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*))))))) |
(:\s*(=&gt;|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.definition.property.js
                                    entity.name.function.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.definiteassignment.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.property.js
                            variable.object.property.js
                        </string>
                        <key>match</key>
                        <string>\#?[_$[:alpha:]][_$[:alnum:]]*</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.optional.js</string>
                        <key>match</key>
                        <string>\?</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.definiteassignment.js</string>
                        <key>match</key>
                        <string>\!</string>
                    </dict>
                </array>
            </dict>
            <key>variable-initializer</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;!=|!)(=)(?!=)(?=\s*\S)(?!\s*.*=&gt;\s*$)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=$|^|[,);}\]]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?&lt;!=|!)(=)(?!=)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=[,);}\]]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(of|in)\s+))|(?=^\s*$)|(?&lt;![\|\&amp;\+\-\*\/])(?&lt;=\S)(?&lt;!=)(?=\s*$)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>component-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.function.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdefault)\s+)?(?:(\bdeclare)\s+)?(component\b)(?:\s*(\*))?(?:(?:\s+|(?&lt;=\*))([_$[:alpha:]][_$[:alnum:]]*))?\s*</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.default.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.function.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.function.js entity.name.function.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?=;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))|(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#function-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-body</string>
                    </dict>
                </array>
            </dict>
            <key>fragment-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.function.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdefault)\s+)?(?:(\bdeclare)\s+)?(fragment\b)(?:\s*(\*))?(?:(?:\s+|(?&lt;=\*))([_$[:alpha:]][_$[:alnum:]]*))?\s*</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.default.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.function.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.function.js entity.name.function.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?=;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))|(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#function-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-body</string>
                    </dict>
                </array>
            </dict>
            <key>function-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.function.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?(?:(async)\s+)?(function\b)(?:\s*(\*))?(?:(?:\s+|(?&lt;=\*))([_$[:alpha:]][_$[:alnum:]]*))?\s*</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.async.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.function.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.function.js entity.name.function.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?=;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))|(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#function-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-body</string>
                    </dict>
                </array>
            </dict>
            <key>function-expression</key>
            <dict>
                <key>name</key>
                <string>meta.function.expression.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(async)\s+)?(function\b)(?:\s*(\*))?(?:(?:\s+|(?&lt;=\*))([_$[:alpha:]][_$[:alnum:]]*))?\s*</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.async.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.function.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.function.js entity.name.function.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?=;)|(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#function-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>
                            #single-line-comment-consuming-line-ending
                        </string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-body</string>
                    </dict>
                </array>
            </dict>
            <key>function-name</key>
            <dict>
                <key>name</key>
                <string>
                    meta.definition.function.js entity.name.function.js
                </string>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
            </dict>
            <key>function-body</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#return-type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-function-return-type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decl-block</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                        <key>match</key>
                        <string>\*</string>
                    </dict>
                </array>
            </dict>
            <key>component-body</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#return-type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-function-return-type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#component-decl-block</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                        <key>match</key>
                        <string>\*</string>
                    </dict>
                </array>
            </dict>
            <key>method-declaration</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.method.declaration.js</string>
                        <key>begin</key>
                        <string
                        >(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:\b(override)\s+)?(?:\b(public|private|protected)\s+)?(?:\b(abstract)\s+)?(?:\b(async)\s+)?\s*\b(constructor)\b(?!:)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\}|;|,|$)|(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#method-declaration-name</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#function-body</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.method.declaration.js</string>
                        <key>begin</key>
                        <string
                        >(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:\b(override)\s+)?(?:\b(public|private|protected)\s+)?(?:\b(abstract)\s+)?(?:\b(async)\s+)?(?:(?:\s*\b(new)\b(?!:)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))|(?:(\*)\s*)?)(?=\s*((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*))?[\(])</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.new.js</string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.generator.asterisk.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\}|;|,|$)|(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#method-declaration-name</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#function-body</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.method.declaration.js</string>
                        <key>begin</key>
                        <string
                        >(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:\b(override)\s+)?(?:\b(public|private|protected)\s+)?(?:\b(abstract)\s+)?(?:\b(async)\s+)?(?:\b(get|set)\s+)?(?:(\*)\s*)?(?=\s*(((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(\??))\s*((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*))?[\(])</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.property.js</string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.generator.asterisk.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\}|;|,|$)|(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#method-declaration-name</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#function-body</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>object-literal-method-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.method.declaration.js</string>
                <key>begin</key>
                <string
                >(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:\b(async)\s+)?(?:\b(get|set)\s+)?(?:(\*)\s*)?(?=\s*(((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(\??))\s*((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*))?[\(])</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.async.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.property.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.generator.asterisk.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?=\}|;|,)|(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#method-declaration-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#function-body</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:\b(async)\s+)?(?:\b(get|set)\s+)?(?:(\*)\s*)?(?=\s*(((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(\??))\s*((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*))?[\(])</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.property.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.generator.asterisk.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\(|\&lt;)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#method-declaration-name</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>method-declaration-name</key>
            <dict>
                <key>begin</key>
                <string
                >(?x)(?=((\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\]))\s*(\??)\s*[\(\&lt;])</string>
                <key>end</key>
                <string>(?=\(|\&lt;)</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#array-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#tuple-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.definition.method.js entity.name.function.js
                        </string>
                        <key>match</key>
                        <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.optional.js</string>
                        <key>match</key>
                        <string>\?</string>
                    </dict>
                </array>
            </dict>
            <key>arrow-function</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.arrow.js</string>
                        <key>match</key>
                        <string
                        >(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(\basync)\s+)?([_$[:alpha:]][_$[:alnum:]]*)\s*(?==&gt;)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.parameter.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.arrow.js</string>
                        <key>begin</key>
                        <string>(?x) (?:
  (?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(\basync)
)? ((?&lt;![})!\]])\s*
  (?=
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  )
)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?==&gt;|\{|(^\s*(export|function|class|interface|let|var|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|const|import|enum|namespace|module|type|abstract|declare)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-parameters</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#function-parameters</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#arrow-return-type</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#possibly-arrow-return-type</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.arrow.js</string>
                        <key>begin</key>
                        <string>=&gt;</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.function.arrow.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >((?&lt;=\}|\S)(?&lt;!=&gt;)|((?!\{)(?=\S)))(?!\/[\/\*])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #single-line-comment-consuming-line-ending
                                </string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#decl-block</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>indexer-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.indexer.declaration.js</string>
                <key>begin</key>
                <string
                >(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(readonly)\s*)?\s*(\[)\s*([_$[:alpha:]][_$[:alnum:]]*)\s*(?=:)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>variable.parameter.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(\])\s*(\?\s*)?|$</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.optional.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                </array>
            </dict>
            <key>indexer-mapped-type-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.indexer.mappedtype.declaration.js</string>
                <key>begin</key>
                <string
                >(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))([+-])?(readonly)\s*)?\s*(\[)\s*([_$[:alpha:]][_$[:alnum:]]*)\s+(in)\s+</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.type.modifier.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.in.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(\])([+-])?\s*(\?\s*)?|$</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.type.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.optional.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as)\s+</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>function-parameters</key>
            <dict>
                <key>name</key>
                <string>meta.parameters.js</string>
                <key>begin</key>
                <string>\(</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.parameters.begin.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\)</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.parameters.end.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#function-parameters-body</string>
                    </dict>
                </array>
            </dict>
            <key>function-parameters-body</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decorator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-parameter</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#parameter-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#parameter-type-annotation</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.parameter.js</string>
                        <key>match</key>
                        <string>,</string>
                    </dict>
                </array>
            </dict>
            <key>class-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.class.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(?:(abstract)\s+)?\b(class)\b(?=\s+|/[/*])</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.class.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>
                            #class-declaration-or-expression-patterns
                        </string>
                    </dict>
                </array>
            </dict>
            <key>class-expression</key>
            <dict>
                <key>name</key>
                <string>meta.class.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(abstract)\s+)?(class)\b(?=\s+|[&lt;{]|\/[\/*])</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.class.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>
                            #class-declaration-or-expression-patterns
                        </string>
                    </dict>
                </array>
            </dict>
            <key>eval-expression</key>
            <dict>
                <key>name</key>
                <string>meta.eval.expression.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(eval)\s*(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.eval.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>contentName</key>
                <string>string.unquoted.eval-content.js</string>
            </dict>
            <key>class-declaration-or-expression-patterns</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-or-interface-heritage</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.class.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-or-interface-body</string>
                    </dict>
                </array>
            </dict>
            <key>interface-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.interface.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(?:(abstract)\s+)?\b(interface)\b(?=\s+|/[/*])</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.interface.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-or-interface-heritage</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.interface.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-or-interface-body</string>
                    </dict>
                </array>
            </dict>
            <key>class-or-interface-heritage</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:\b(extends|implements)\b)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?=\{)</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#class-or-interface-heritage</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionWithoutIdentifiers</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            ([_$[:alpha:]][_$[:alnum:]]*)\s*(?:(\.)|(\?\.(?!\s*[[:digit:]])))(?=\s*[_$[:alpha:]][_$[:alnum:]]*(\s*\??\.\s*[_$[:alpha:]][_$[:alnum:]]*)*\s*)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.module.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.other.inherited-class.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionPunctuations</string>
                    </dict>
                </array>
            </dict>
            <key>class-or-interface-body</key>
            <dict>
                <key>begin</key>
                <string>\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decorator</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?&lt;=:)\s*</string>
                        <key>end</key>
                        <string>
                            (?=\s|[;),}\]:\-\+]|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#method-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#indexer-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#field-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#access-modifier</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#property-accessor</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#async-modifier</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#after-operator-block-as-object-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decl-block</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-semicolon</string>
                    </dict>
                </array>
            </dict>
            <key>access-modifier</key>
            <dict>
                <key>name</key>
                <string>storage.modifier.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(abstract|declare|override|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>property-accessor</key>
            <dict>
                <key>name</key>
                <string>storage.type.property.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(accessor|get|set)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>async-modifier</key>
            <dict>
                <key>name</key>
                <string>storage.modifier.async.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(async)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>enum-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.enum.declaration.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?(?:\b(const)\s+)?\b(enum)\s+([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.enum.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.enum.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?&lt;=\})</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>\{</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\}</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            variable.other.enummember.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?=,|\}|$)</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#comment</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#variable-initializer</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>
                                    (?=((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\])))
                                </string>
                                <key>end</key>
                                <string>(?=,|\}|$)</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#string</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#array-literal</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#tuple-literal</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#comment</string>
                                    </dict>
                                    <dict>
                                        <key>include</key>
                                        <string>#variable-initializer</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#punctuation-comma</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>namespace-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.namespace.declaration.js</string>
                <key>begin</key>
                <string
                >(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(namespace|module)\s+(?=[_$[:alpha:]"'`]))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.namespace.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?&lt;=\})|(?=;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.module.js</string>
                        <key>match</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-accessor</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decl-block</string>
                    </dict>
                </array>
            </dict>
            <key>type-alias-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.type.declaration.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(type)\b\s+([_$[:alpha:]][_$[:alnum:]]*)\s*</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.type.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.alias.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>
                    (?=\}|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                </string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>
                            (=)\s*(intrinsic)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.intrinsic.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>
                            (?=\}|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(=)\s*</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>
                            (?=\}|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>import-equals-declaration</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.import-equals.external.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(import)(?:\s+(type))?\s+([_$[:alpha:]][_$[:alnum:]]*)\s*(=)\s*(require)\s*(\()</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.import.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.type.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.readwrite.alias.js
                                </string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                            <key>7</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.require.js</string>
                            </dict>
                            <key>8</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.import-equals.internal.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(import)(?:\s+(type))?\s+([_$[:alpha:]][_$[:alnum:]]*)\s*(=)\s*(?!require\b)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.import.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.type.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.readwrite.alias.js
                                </string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=;|$|^)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #single-line-comment-consuming-line-ending
                                </string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>
                                    ([_$[:alpha:]][_$[:alnum:]]*)\s*(?:(\.)|(\?\.(?!\s*[[:digit:]])))
                                </string>
                                <key>captures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            entity.name.type.module.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>punctuation.accessor.js</string>
                                    </dict>
                                    <key>3</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.accessor.optional.js
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>variable.other.readwrite.js</string>
                                <key>match</key>
                                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>import-declaration</key>
            <dict>
                <key>name</key>
                <string>meta.import.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?\b(import)(?:\s+(type)(?!\s+from))?(?!\s*[:\(])(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.export.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.import.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.type.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?&lt;!^import|[^\._$[:alnum:]]import)(?=;|$|^)</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>
                            #single-line-comment-consuming-line-ending
                        </string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;=^import|[^\._$[:alnum:]]import)(?!\s*["'])</string>
                        <key>end</key>
                        <string>\bfrom\b</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.from.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#import-export-declaration</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#import-export-declaration</string>
                    </dict>
                </array>
            </dict>
            <key>export-declaration</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(export)\s+(as)\s+(namespace)\s+([_$[:alpha:]][_$[:alnum:]]*)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.namespace.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.module.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.export.default.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(export)(?:\s+(type))?(?:(?:\s*(=))|(?:\s+(default)(?=\s+)))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.type.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.default.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>
                            (?=$|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#interface-declaration</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.export.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(export)(?:\s+(type))?\b(?!(\$)|(\s*:))((?=\s*[\{*])|((?=\s*[_$[:alpha:]][_$[:alnum:]]*(\s|,))(?!\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b)))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.export.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.type.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>
                            (?=$|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))
                        </string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#import-export-declaration</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>import-export-declaration</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#import-export-block</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.from.js</string>
                        <key>match</key>
                        <string>\bfrom\b</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#import-export-assert-clause</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#import-export-clause</string>
                    </dict>
                </array>
            </dict>
            <key>import-export-assert-clause</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(with)|(assert))\s*(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.with.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.assert.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object-literal.key.js</string>
                        <key>match</key>
                        <string>
                            (?:[_$[:alpha:]][_$[:alnum:]]*)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:)
                        </string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.key-value.js</string>
                        <key>match</key>
                        <string>:</string>
                    </dict>
                </array>
            </dict>
            <key>import-export-block</key>
            <dict>
                <key>name</key>
                <string>meta.block.js</string>
                <key>begin</key>
                <string>\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#import-export-clause</string>
                    </dict>
                </array>
            </dict>
            <key>import-export-clause</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(?:(\btype)\s+)?(?:(\bdefault)|(\*)|(\b[_$[:alpha:]][_$[:alnum:]]*)|((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))))\s+(as)\s+(?:(default(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))|([_$[:alpha:]][_$[:alnum:]]*)|((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.type.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.default.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    constant.language.import-export-all.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.readwrite.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>string.quoted.alias.js</string>
                            </dict>
                            <key>12</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                            <key>13</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.default.js</string>
                            </dict>
                            <key>14</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.readwrite.alias.js
                                </string>
                            </dict>
                            <key>15</key>
                            <dict>
                                <key>name</key>
                                <string>string.quoted.alias.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.language.import-export-all.js</string>
                        <key>match</key>
                        <string>\*</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.default.js</string>
                        <key>match</key>
                        <string>\b(default)\b</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?:(\btype)\s+)?(?:([_$[:alpha:]][_$[:alnum:]]*)|((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)))
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.type.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.readwrite.alias.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>string.quoted.alias.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>switch-statement</key>
            <dict>
                <key>name</key>
                <string>switch-statement.expr.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?=\bswitch\s*\()</string>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>switch-expression.expr.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(switch)\s*(\()</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.switch.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>switch-block.expr.js</string>
                        <key>begin</key>
                        <string>\{</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>name</key>
                                <string>case-clause.expr.js</string>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.switch.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?=:)</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#expression</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>(:)\s*(\{)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            case-clause.expr.js
                                            punctuation.definition.section.case-statement.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            meta.block.js
                                            punctuation.definition.block.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>\}</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            meta.block.js
                                            punctuation.definition.block.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>contentName</key>
                                <string>meta.block.js</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#statements</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>(:)</string>
                                <key>captures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            case-clause.expr.js
                                            punctuation.definition.section.case-statement.js
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#statements</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>component-switch-statement</key>
            <dict>
                <key>name</key>
                <string>switch-statement.expr.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?=\bswitch\s*\()</string>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>switch-expression.expr.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(switch)\s*(\()</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.switch.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>switch-block.expr.js</string>
                        <key>begin</key>
                        <string>\{</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>name</key>
                                <string>case-clause.expr.js</string>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.switch.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?=:)</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#expression</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>(:)\s*(\{)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            case-clause.expr.js
                                            punctuation.definition.section.case-statement.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            meta.block.js
                                            punctuation.definition.block.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>\}</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            meta.block.js
                                            punctuation.definition.block.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>contentName</key>
                                <string>meta.block.js</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#statements</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>(:)</string>
                                <key>captures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            case-clause.expr.js
                                            punctuation.definition.section.case-statement.js
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#component-statements</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>for-loop</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))for(?=((\s+|(\s*\/\*([^\*]|(\*[^\/]))*\*\/\s*))await)?\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)?(\())</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.loop.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?&lt;=\))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.loop.js</string>
                        <key>match</key>
                        <string>await</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.for-of-ripple</string>
                        <key>match</key>
                        <string>
                            \(\s*(let|const|var)\s+([_$[:alpha:]][_$[:alnum:]]*)\s+(of)\s+([^;]+?)\s*;\s*(?:(index)\s+([_$[:alpha:]][_$[:alnum:]]*)(?:\s*;\s*(key)\s+([^)]+?))?|(key)\s+([^)]+?))\s*\)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.readwrite.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.expression.of.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.object.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.keyword.index.ripple</string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.readwrite.js</string>
                            </dict>
                            <key>7</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.keyword.key.ripple</string>
                            </dict>
                            <key>8</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.object.js</string>
                            </dict>
                            <key>9</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.keyword.key.ripple</string>
                            </dict>
                            <key>10</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.object.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>\(</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#var-expr</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#punctuation-semicolon</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>if-statement</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?=\bif\s*(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))\s*(?!\{))</string>
                        <key>end</key>
                        <string>(?=;|$|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(if)\s*(\()</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.conditional.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>\)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#expression</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>string.regexp.js</string>
                                <key>begin</key>
                                <string
                                >(?&lt;=\))\s*\/(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)*\])+\/([dgimsuvy]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.string.begin.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(/)([dgimsuvy]*)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.string.end.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>keyword.other.js</string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#regexp</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#statements</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>component-if-statement</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?=\bif\s*(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))\s*(?!\{))</string>
                        <key>end</key>
                        <string>(?=;|$|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(if)\s*(\()</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.control.conditional.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>\)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#expression</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>string.regexp.js</string>
                                <key>begin</key>
                                <string
                                >(?&lt;=\))\s*\/(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)*\])+\/([dgimsuvy]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.string.begin.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(/)([dgimsuvy]*)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.string.end.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>keyword.other.js</string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#regexp</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#component-statements</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>decl-block</key>
            <dict>
                <key>name</key>
                <string>meta.block.js</string>
                <key>begin</key>
                <string>\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#statements</string>
                    </dict>
                </array>
            </dict>
            <key>component-decl-block</key>
            <dict>
                <key>name</key>
                <string>meta.block.js</string>
                <key>begin</key>
                <string>\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#component-statements</string>
                    </dict>
                </array>
            </dict>
            <key>after-operator-block-as-object-literal</key>
            <dict>
                <key>name</key>
                <string>meta.objectliteral.js</string>
                <key>begin</key>
                <string
                >(?&lt;!\+\+|--)(?&lt;=[:=(,\[?+!&gt;]|^await|[^\._$[:alnum:]]await|^return|[^\._$[:alnum:]]return|^yield|[^\._$[:alnum:]]yield|^throw|[^\._$[:alnum:]]throw|^in|[^\._$[:alnum:]]in|^of|[^\._$[:alnum:]]of|^typeof|[^\._$[:alnum:]]typeof|&amp;&amp;|\|\||\*)\s*(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#object-member</string>
                    </dict>
                </array>
            </dict>
            <key>object-literal</key>
            <dict>
                <key>name</key>
                <string>meta.objectliteral.js</string>
                <key>begin</key>
                <string>\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#object-member</string>
                    </dict>
                </array>
            </dict>
            <key>object-member</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-literal-method-declaration</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.object.member.js meta.object-literal.key.js
                        </string>
                        <key>begin</key>
                        <string>(?=\[)</string>
                        <key>end</key>
                        <string>(?=:)|((?&lt;=[\]])(?=\s*[\(\&lt;]))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#array-literal</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#tuple-literal</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.object.member.js meta.object-literal.key.js
                        </string>
                        <key>begin</key>
                        <string>(?=[\'\"\`])</string>
                        <key>end</key>
                        <string
                        >(?=:)|((?&lt;=[\'\"\`])(?=((\s*[\(\&lt;,}])|(\s+(as|satisfies)\s+))))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.object.member.js meta.object-literal.key.js
                        </string>
                        <key>begin</key>
                        <string
                        >(?x)(?=(\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$)))</string>
                        <key>end</key>
                        <string
                        >(?=:)|(?=\s*([\(\&lt;,}])|(\s+as|satisfies\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#numeric-literal</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.method.declaration.js</string>
                        <key>begin</key>
                        <string>(?&lt;=[\]\'\"\`])(?=\s*[\(\&lt;])</string>
                        <key>end</key>
                        <string>(?=\}|;|,)|(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#function-body</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>match</key>
                        <string>
                            (?![_$[:alpha:]])([[:digit:]]+)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.object-literal.key.js</string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>constant.numeric.decimal.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>match</key>
                        <string
                        >(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:(\s*\/\*([^\*]|(\*[^\/]))*\*\/)*\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.object-literal.key.js</string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.function.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>match</key>
                        <string>
                            (?:[_$[:alpha:]][_$[:alnum:]]*)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.object-literal.key.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>begin</key>
                        <string>\.\.\.</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.spread.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=,|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>match</key>
                        <string>
                            ([_$[:alpha:]][_$[:alnum:]]*)\s*(?=,|\}|$|\/\/|\/\*)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.readwrite.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as)\s+(const)(?=\s*([,}]|$))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(as)|(satisfies))\s+</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.satisfies.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=[;),}\]:?\-\+\&gt;]|\|\||\&amp;\&amp;|\!\=\=|$|^|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as|satisfies)\s+))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>begin</key>
                        <string>(?=[_$[:alpha:]][_$[:alnum:]]*\s*=)</string>
                        <key>end</key>
                        <string>(?=,|\}|$|\/\/|\/\*)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.object.member.js</string>
                        <key>begin</key>
                        <string>:</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.object-literal.key.js
                                    punctuation.separator.key-value.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=,|\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;=:)\s*(async)?(?=\s*(&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)\(\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            storage.modifier.async.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?&lt;=\))</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#type-parameters</string>
                                    </dict>
                                    <dict>
                                        <key>begin</key>
                                        <string>\(</string>
                                        <key>beginCaptures</key>
                                        <dict>
                                            <key>0</key>
                                            <dict>
                                                <key>name</key>
                                                <string>
                                                    meta.brace.round.js
                                                </string>
                                            </dict>
                                        </dict>
                                        <key>end</key>
                                        <string>\)</string>
                                        <key>endCaptures</key>
                                        <dict>
                                            <key>0</key>
                                            <dict>
                                                <key>name</key>
                                                <string>
                                                    meta.brace.round.js
                                                </string>
                                            </dict>
                                        </dict>
                                        <key>patterns</key>
                                        <array>
                                            <dict>
                                                <key>include</key>
                                                <string>
                                                    #expression-inside-possibly-arrow-parens
                                                </string>
                                            </dict>
                                        </array>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;=:)\s*(async)?\s*(\()(?=\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            storage.modifier.async.js
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>\)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>
                                            #expression-inside-possibly-arrow-parens
                                        </string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;=:)\s*(async)?\s*(?=\&lt;\s*$)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            storage.modifier.async.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(?&lt;=\&gt;)</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#type-parameters</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string
                                >(?&lt;=\&gt;)\s*(\()(?=\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>\)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>meta.brace.round.js</string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>
                                            #expression-inside-possibly-arrow-parens
                                        </string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#possibly-arrow-return-type</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decl-block</string>
                    </dict>
                </array>
            </dict>
            <key>ternary-expression</key>
            <dict>
                <key>begin</key>
                <string>(?!\?\.\s*[^[:digit:]])(\?)(?!\?)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.ternary.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\s*(:)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.ternary.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                </array>
            </dict>
            <key>function-call</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\s*\??\.\s*(\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*))|(?&lt;=[\)]))\s*(?:(\?\.\s*)|(\!))?((&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))(([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;)*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;\s*)?\())</string>
                        <key>end</key>
                        <string
                        >(?&lt;=\))(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\s*\??\.\s*(\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*))|(?&lt;=[\)]))\s*(?:(\?\.\s*)|(\!))?((&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))(([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;)*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;\s*)?\())</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>name</key>
                                <string>meta.function-call.js</string>
                                <key>begin</key>
                                <string>
                                    (?=(([_$[:alpha:]][_$[:alnum:]]*)(\s*\??\.\s*(\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*))
                                </string>
                                <key>end</key>
                                <string
                                >(?=\s*(?:(\?\.\s*)|(\!))?((&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))(([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;)*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;\s*)?\())</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#function-call-target</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#function-call-optionals</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#paren-expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\s*\??\.\s*(\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*))|(?&lt;=[\)]))(&lt;\s*[\{\[\(]\s*$))</string>
                        <key>end</key>
                        <string
                        >(?&lt;=\&gt;)(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\s*\??\.\s*(\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*))|(?&lt;=[\)]))(&lt;\s*[\{\[\(]\s*$))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>name</key>
                                <string>meta.function-call.js</string>
                                <key>begin</key>
                                <string>
                                    (?=(([_$[:alpha:]][_$[:alnum:]]*)(\s*\??\.\s*(\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*))
                                </string>
                                <key>end</key>
                                <string>(?=(&lt;\s*[\{\[\(]\s*$))</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#function-call-target</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#function-call-optionals</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>function-call-target</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#support-function-call-identifiers</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.js</string>
                        <key>match</key>
                        <string>(\#?[_$[:alpha:]][_$[:alnum:]]*)</string>
                    </dict>
                </array>
            </dict>
            <key>function-call-optionals</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.function-call.js
                            punctuation.accessor.optional.js
                        </string>
                        <key>match</key>
                        <string>\?\.</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.function-call.js
                            keyword.operator.definiteassignment.js
                        </string>
                        <key>match</key>
                        <string>\!</string>
                    </dict>
                </array>
            </dict>
            <key>support-function-call-identifiers</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#support-objects</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#object-identifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-accessor</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.import.js</string>
                        <key>match</key>
                        <string
                        >(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))import(?=\s*[\(]\s*[\"\'\`]))</string>
                    </dict>
                </array>
            </dict>
            <key>new-expr</key>
            <dict>
                <key>name</key>
                <string>new.expr.js</string>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(new)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.new.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?&lt;=\))|(?=[;),}\]:?\-\+\&gt;]|\|\||\&amp;\&amp;|\!\=\=|$|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))new(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))function((\s+[_$[:alpha:]][_$[:alnum:]]*)|(\s*[\(]))))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                </array>
            </dict>
            <key>instanceof-expr</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(instanceof)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>
                            keyword.operator.expression.instanceof.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?&lt;=\))|(?=[;),}\]:?\-\+\&gt;]|\|\||\&amp;\&amp;|\!\=\=|$|(===|!==|==|!=)|(([\&amp;\~\^\|]\s*)?[_$[:alpha:]][_$[:alnum:]]*\s+instanceof(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))function((\s+[_$[:alpha:]][_$[:alnum:]]*)|(\s*[\(]))))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>paren-expression-possibly-arrow</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;=[(=,])\s*(async)?(?=\s*((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*))?\(\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=\))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #paren-expression-possibly-arrow-with-typeparameters
                                </string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;=[(=,]|=&gt;|^return|[^\._$[:alnum:]]return)\s*(async)?(?=\s*((((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*))?\()|(&lt;)|((&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)))\s*$)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.async.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=\))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #paren-expression-possibly-arrow-with-typeparameters
                                </string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#possibly-arrow-return-type</string>
                    </dict>
                </array>
            </dict>
            <key>paren-expression-possibly-arrow-with-typeparameters</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>\(</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>meta.brace.round.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #expression-inside-possibly-arrow-parens
                                </string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>expression-inside-possibly-arrow-parens</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expressionWithoutIdentifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#decorator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#destructuring-parameter</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(override|public|protected|private|readonly)\s+(?=(override|public|protected|private|readonly)\s+)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(override|public|private|protected|readonly)\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*(\??)(?=\s*
# function assignment |
(=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)) |
# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;
(:\s*(
  (&lt;) |
  ([(]\s*(
    ([)]) |
    (\.\.\.) |
    ([_$[:alnum:]]+\s*(
      ([:,?=])|
      ([)]\s*=&gt;)
    ))
  ))
)) |
(:\s*(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Function(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))) |
(:\s*((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*))))))) |
(:\s*(=&gt;|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.name.function.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.function.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(override|public|private|protected|readonly)\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*(\??)(?=\s*[:,]|$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.parameter.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>variable.parameter.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable-initializer</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.parameter.js</string>
                        <key>match</key>
                        <string>,</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#identifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionPunctuations</string>
                    </dict>
                </array>
            </dict>
            <key>paren-expression</key>
            <dict>
                <key>begin</key>
                <string>\(</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.round.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\)</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.round.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                </array>
            </dict>
            <key>expression-operators</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.flow.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(await)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(yield)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))(?=\s*\/\*([^\*]|(\*[^\/]))*\*\/\s*\*)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.flow.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\*</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.generator.asterisk.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(yield)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))(?:\s*(\*))?</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.flow.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.generator.asterisk.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.delete.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))delete(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.in.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))in(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))(?!\()</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.of.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))of(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))(?!\()</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            keyword.operator.expression.instanceof.js
                        </string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))instanceof(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.new.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))new(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#typeof-operator</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.void.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))void(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as)\s+(const)(?=\s*($|[;,:})\]]))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(as)|(satisfies))\s+</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.as.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.satisfies.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?=^|[;),}\]:?\-\+\&gt;]|\|\||\&amp;\&amp;|\!\=\=|$|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as|satisfies)\s+)|(\s+\&lt;))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.spread.js</string>
                        <key>match</key>
                        <string>\.\.\.</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.assignment.compound.js</string>
                        <key>match</key>
                        <string>\*=|(?&lt;!\()/=|%=|\+=|\-=</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            keyword.operator.assignment.compound.bitwise.js
                        </string>
                        <key>match</key>
                        <string
                        >\&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.bitwise.shift.js</string>
                        <key>match</key>
                        <string>&lt;&lt;|&gt;&gt;&gt;|&gt;&gt;</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.comparison.js</string>
                        <key>match</key>
                        <string>===|!==|==|!=</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            keyword.operator.relational.js
                            operator.relational.ripple-force
                            entity.name.operator.relational.ripple
                        </string>
                        <key>match</key>
                        <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;=[_$[:alnum:]])(\!)\s*(?:(/=)|(?:(/)(?![/*])))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.logical.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.assignment.compound.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.arithmetic.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.logical.js</string>
                        <key>match</key>
                        <string>\!|&amp;&amp;|\|\||\?\?</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.bitwise.js</string>
                        <key>match</key>
                        <string>\&amp;|~|\^|\|</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.assignment.js</string>
                        <key>match</key>
                        <string>\=</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.decrement.js</string>
                        <key>match</key>
                        <string>--</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.increment.js</string>
                        <key>match</key>
                        <string>\+\+</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.arithmetic.js</string>
                        <key>match</key>
                        <string>%|\*|/|-|\+</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;=[_$[:alnum:])\]])\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)+(?:(/=)|(?:(/)(?![/*]))))</string>
                        <key>end</key>
                        <string>
                            (?:(/=)|(?:(/)(?!\*([^\*]|(\*[^\/]))*\*\/)))
                        </string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.assignment.compound.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.arithmetic.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;=[_$[:alnum:])\]])\s*(?:(/=)|(?:(/)(?![/*])))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.assignment.compound.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.arithmetic.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>typeof-operator</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))typeof(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.typeof.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?=[,);}\]=&gt;:&amp;|{\?]|(extends\s+)|$|;|^\s*$|(?:^\s*(?:abstract|async|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|var|while)\b))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type-arguments</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                </array>
            </dict>
            <key>literal</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#boolean-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#null-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#undefined-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numericConstant-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#array-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#tuple-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#record-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#this-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#super-literal</string>
                    </dict>
                </array>
            </dict>
            <key>array-literal</key>
            <dict>
                <key>name</key>
                <string>meta.array.literal.js</string>
                <key>begin</key>
                <string>\s*(\[)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>tuple-literal</key>
            <dict>
                <key>name</key>
                <string>meta.tuple.literal.js</string>
                <key>begin</key>
                <string>(#)(\[)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.tuple.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>record-literal</key>
            <dict>
                <key>name</key>
                <string>meta.record.literal.js</string>
                <key>begin</key>
                <string>(#)(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.record.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#object-member</string>
                    </dict>
                </array>
            </dict>
            <key>numeric-literal</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.hex.js</string>
                        <key>match</key>
                        <string
                        >\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.binary.js</string>
                        <key>match</key>
                        <string
                        >\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.octal.js</string>
                        <key>match</key>
                        <string
                        >\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?x)
(?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>constant.numeric.decimal.js</string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.delimiter.decimal.period.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.delimiter.decimal.period.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.delimiter.decimal.period.js
                                </string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>7</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>8</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.delimiter.decimal.period.js
                                </string>
                            </dict>
                            <key>9</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>10</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.delimiter.decimal.period.js
                                </string>
                            </dict>
                            <key>11</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>12</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.delimiter.decimal.period.js
                                </string>
                            </dict>
                            <key>13</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                            <key>14</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.numeric.bigint.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>boolean-literal</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.language.boolean.true.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))true(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.language.boolean.false.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))false(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                </array>
            </dict>
            <key>null-literal</key>
            <dict>
                <key>name</key>
                <string>constant.language.null.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))null(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>this-literal</key>
            <dict>
                <key>name</key>
                <string>variable.language.this.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))this\b(?!\$)</string>
            </dict>
            <key>super-literal</key>
            <dict>
                <key>name</key>
                <string>variable.language.super.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))super\b(?!\$)</string>
            </dict>
            <key>undefined-literal</key>
            <dict>
                <key>name</key>
                <string>constant.language.undefined.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))undefined(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>numericConstant-literal</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.language.nan.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))NaN(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.language.infinity.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Infinity(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                </array>
            </dict>
            <key>support-objects</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>variable.language.arguments.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(arguments)\b(?!\$)</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>support.class.promise.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(Promise)\b(?!\$)</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(import)\s*(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(meta)\b(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.import.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    support.variable.property.importmeta.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(new)\s*(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(target)\b(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.new.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    support.variable.property.target.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?x) (?:(\.)|(\?\.(?!\s*[[:digit:]]))) \s* (?:
  (?:(constructor|length|prototype|__proto__)\b(?!\$|\s*(&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?\())
  |
  (?:(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\b(?!\$)))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>support.variable.property.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>support.constant.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(exports)|(module)(?:(?:(\.)|(\?\.(?!\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\b(?!\$)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>support.type.object.module.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>support.type.object.module.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>support.type.object.module.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>identifiers</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#object-identifiers</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\s*=\s*(
  ((async\s+)?(
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((async\s*)?(
    ((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |
(
  [&lt;]\s*[_$[:alpha:]][_$[:alnum:]]*\s+extends\s*[^=&gt;]                                                              # &lt; typeparam extends
) |
# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*(((const\s+)?[_$[:alpha:]])|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.function.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(\#?[[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.constant.property.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(\#?[_$[:alpha:]][_$[:alnum:]]*)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.property.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>variable.other.constant.js</string>
                        <key>match</key>
                        <string>
                            ([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])
                        </string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>variable.other.readwrite.js</string>
                        <key>match</key>
                        <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                    </dict>
                </array>
            </dict>
            <key>object-identifiers</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>support.class.js</string>
                        <key>match</key>
                        <string>
                            ([_$[:alpha:]][_$[:alnum:]]*)(?=\s*\??\.\s*prototype\b(?!\$))
                        </string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(?:
  (\#?[[:upper:]][_$[:digit:][:upper:]]*) |
  (\#?[_$[:alpha:]][_$[:alnum:]]*)
)(?=\s*\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.constant.object.property.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.object.property.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)(?:
  ([[:upper:]][_$[:digit:][:upper:]]*) |
  ([_$[:alpha:]][_$[:alnum:]]*)
)(?=\s*\??\.\s*\#?[_$[:alpha:]][_$[:alnum:]]*)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.constant.object.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.object.js</string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>type-annotation</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.type.annotation.js</string>
                        <key>begin</key>
                        <string>(:)(?=\s*\S)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.annotation.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?&lt;![:|&amp;])(?!\s*[|&amp;]\s+)((?=^|[,);\}\]]|//)|(?==[^&gt;])|((?&lt;=[\}&gt;\]\)]|[_$[:alpha:]])\s*(?=\{)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.type.annotation.js</string>
                        <key>begin</key>
                        <string>(:)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.annotation.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?&lt;![:|&amp;])((?=[,);\}\]]|\/\/)|(?==[^&gt;])|(?=^\s*$)|((?&lt;=[\}&gt;\]\)]|[_$[:alpha:]])\s*(?=\{)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>parameter-type-annotation</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.type.annotation.js</string>
                        <key>begin</key>
                        <string>(:)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.annotation.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=[,)])|(?==[^&gt;])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>return-type</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.return.type.js</string>
                        <key>begin</key>
                        <string>(?&lt;=\))\s*(:)(?=\s*\S)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.annotation.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;![:|&amp;])(?=$|^|[{};,]|//)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#return-type-core</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.return.type.js</string>
                        <key>begin</key>
                        <string>(?&lt;=\))\s*(:)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.annotation.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?&lt;![:|&amp;])((?=[{};,]|//|^\s*$)|((?&lt;=\S)(?=\s*$)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#return-type-core</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>return-type-core</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?&lt;=[:|&amp;])(?=\s*\{)</string>
                        <key>end</key>
                        <string>(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-object</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-predicate-operator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>arrow-return-type</key>
            <dict>
                <key>name</key>
                <string>meta.return.type.arrow.js</string>
                <key>begin</key>
                <string>(?&lt;=\))\s*(:)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.type.annotation.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?==&gt;|\{|(^\s*(export|function|class|interface|let|var|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|const|import|enum|namespace|module|type|abstract|declare)\s+))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#arrow-return-type-body</string>
                    </dict>
                </array>
            </dict>
            <key>possibly-arrow-return-type</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;=\)|^)\s*(:)(?=\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*=&gt;)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.arrow.js meta.return.type.arrow.js
                            keyword.operator.type.annotation.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string
                >(?==&gt;|\{|(^\s*(export|function|class|interface|let|var|(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)|(?:\bawait\s+(?:\busing(?=\s+(?!in\b|of\b(?!\s*(?:of\b|=)))[_$[:alpha:]])\b)\b)|const|import|enum|namespace|module|type|abstract|declare)\s+))</string>
                <key>contentName</key>
                <string>meta.arrow.js meta.return.type.arrow.js</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#arrow-return-type-body</string>
                    </dict>
                </array>
            </dict>
            <key>arrow-return-type-body</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>(?&lt;=[:])(?=\s*\{)</string>
                        <key>end</key>
                        <string>(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-object</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-predicate-operator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>type-parameters</key>
            <dict>
                <key>name</key>
                <string>meta.type.parameters.js</string>
                <key>begin</key>
                <string>(&lt;)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.typeparameters.begin.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(&gt;)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.typeparameters.end.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(extends|in|out|const)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.assignment.js</string>
                        <key>match</key>
                        <string>(=)(?!&gt;)</string>
                    </dict>
                </array>
            </dict>
            <key>type-arguments</key>
            <dict>
                <key>name</key>
                <string>meta.type.parameters.js</string>
                <key>begin</key>
                <string>\&lt;</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.typeparameters.begin.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\&gt;</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.typeparameters.end.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type-arguments-body</string>
                    </dict>
                </array>
            </dict>
            <key>type-arguments-body</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(_)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.type.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>type</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-string</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#numeric-literal</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-primitive</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-builtin-literals</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-tuple</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-object</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-operators</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-conditional</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-fn-type-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-paren-or-function-parameters</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-function-return-type</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(readonly)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-name</string>
                    </dict>
                </array>
            </dict>
            <key>type-primitive</key>
            <dict>
                <key>name</key>
                <string>support.type.primitive.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>type-builtin-literals</key>
            <dict>
                <key>name</key>
                <string>support.type.builtin.js</string>
                <key>match</key>
                <string
                >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            </dict>
            <key>type-tuple</key>
            <dict>
                <key>name</key>
                <string>meta.type.tuple.js</string>
                <key>begin</key>
                <string>\[</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.square.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.rest.js</string>
                        <key>match</key>
                        <string>\.\.\.</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))([_$[:alpha:]][_$[:alnum:]]*)\s*(\?)?\s*(:)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.label.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.separator.label.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                </array>
            </dict>
            <key>type-object</key>
            <dict>
                <key>name</key>
                <string>meta.object.type.js</string>
                <key>begin</key>
                <string>\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#method-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#indexer-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#indexer-mapped-type-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#field-declaration</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>\.\.\.</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.spread.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\}|;|,|$)|(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-comma</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#punctuation-semicolon</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>type-conditional</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(extends)\s+</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=:)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string>\?</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.operator.ternary.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>:</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.operator.ternary.js
                                        </string>
                                    </dict>
                                </dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#type</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>type-paren-or-function-parameters</key>
            <dict>
                <key>name</key>
                <string>meta.type.paren.cover.js</string>
                <key>begin</key>
                <string>\(</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.round.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\)</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>meta.brace.round.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(public|private|protected|readonly)\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\s*(\??)(?=\s*(:\s*(
  (&lt;) |
  ([(]\s*(
    ([)]) |
    (\.\.\.) |
    ([_$[:alnum:]]+\s*(
      ([:,?=])|
      ([)]\s*=&gt;)
    ))
  ))
)) |
(:\s*(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Function(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))) |
(:\s*((&lt;\s*$)|([\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*))))))))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.name.function.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.function.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(public|private|protected|readonly)\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\s*(\??)(?=:)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.rest.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.parameter.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>variable.parameter.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.optional.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-annotation</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.parameter.js</string>
                        <key>match</key>
                        <string>,</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>type-fn-type-parameters</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(abstract)\s+)?(new)\b(?=\s*\&lt;)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.type.constructor.js storage.modifier.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.type.constructor.js
                                    keyword.control.new.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=&gt;)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-parameters</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.type.constructor.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(abstract)\s+)?(new)\b\s*(?=\()</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.modifier.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.control.new.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=\))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#function-parameters</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.type.function.js</string>
                        <key>begin</key>
                        <string>(?x)(
  (?=
    [(]\s*(
      ([)]) |
      (\.\.\.) |
      ([_$[:alnum:]]+\s*(
        ([:,?=])|
        ([)]\s*=&gt;)
      ))
    )
  )
)</string>
                        <key>end</key>
                        <string>(?&lt;=\))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#function-parameters</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>type-function-return-type</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.type.function.return.js</string>
                        <key>begin</key>
                        <string>(=&gt;)(?=\s*\S)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.function.arrow.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?&lt;!=&gt;)(?&lt;![|&amp;])(?=[,\]\)\{\}=;&gt;:\?]|//|$)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-function-return-type-core</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.type.function.return.js</string>
                        <key>begin</key>
                        <string>=&gt;</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.function.arrow.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string
                        >(?&lt;!=&gt;)(?&lt;![|&amp;])((?=[,\]\)\{\}=;:\?&gt;]|//|^\s*$)|((?&lt;=\S)(?=\s*$)))</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-function-return-type-core</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>type-function-return-type-core</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?&lt;==&gt;)(?=\s*\{)</string>
                        <key>end</key>
                        <string>(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-object</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-predicate-operator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
            </dict>
            <key>type-operators</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#typeof-operator</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#type-infer</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>([&amp;|])(?=\s*\{)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.type.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?&lt;=\})</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-object</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>[&amp;|]</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.type.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\S)</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.keyof.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))keyof(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.ternary.js</string>
                        <key>match</key>
                        <string>(\?|\:)</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.import.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))import(?=\s*\()</string>
                    </dict>
                </array>
            </dict>
            <key>type-infer</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(infer)\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))(?:\s+(extends)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.)))?</string>
                        <key>name</key>
                        <string>meta.type.infer.js</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.expression.infer.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.expression.extends.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>type-predicate-operator</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(asserts)\s+)?(?!asserts)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\s(is)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.asserts.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.parameter.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.parameter.js</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.expression.is.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(asserts)\s+(?!is)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.type.asserts.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.parameter.js
                                    variable.language.this.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.parameter.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.type.asserts.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))asserts(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.expression.is.js</string>
                        <key>match</key>
                        <string
                        >(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))is(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
                    </dict>
                </array>
            </dict>
            <key>type-name</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >([_$[:alpha:]][_$[:alnum:]]*)\s*(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(&lt;)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.module.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.type.parameters.js
                                    punctuation.definition.typeparameters.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(&gt;)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.type.parameters.js
                                    punctuation.definition.typeparameters.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>contentName</key>
                        <string>meta.type.parameters.js</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments-body</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)\s*(&lt;)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.type.parameters.js
                                    punctuation.definition.typeparameters.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(&gt;)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.type.parameters.js
                                    punctuation.definition.typeparameters.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>contentName</key>
                        <string>meta.type.parameters.js</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments-body</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            ([_$[:alpha:]][_$[:alnum:]]*)\s*(?:(\.)|(\?\.(?!\s*[[:digit:]])))
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.module.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.js</string>
                        <key>match</key>
                        <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                    </dict>
                </array>
            </dict>
            <key>punctuation-comma</key>
            <dict>
                <key>name</key>
                <string>punctuation.separator.comma.js</string>
                <key>match</key>
                <string>,</string>
            </dict>
            <key>punctuation-semicolon</key>
            <dict>
                <key>name</key>
                <string>punctuation.terminator.statement.js</string>
                <key>match</key>
                <string>;</string>
            </dict>
            <key>punctuation-accessor</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>
                            meta.reactive-computed-member-access.ripple
                        </string>
                        <key>match</key>
                        <string>(\.)(\@)(\[)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.computed-property.begin.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?:(\.)|(\?\.(?!\s*[[:digit:]])))</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.accessor.js</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.accessor.optional.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>string</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#qstring-single</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#qstring-double</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#template</string>
                    </dict>
                </array>
            </dict>
            <key>qstring-double</key>
            <dict>
                <key>name</key>
                <string>string.quoted.double.js</string>
                <key>begin</key>
                <string>"</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(")|((?:[^\\\n])$)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>invalid.illegal.newline.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#string-character-escape</string>
                    </dict>
                </array>
            </dict>
            <key>qstring-single</key>
            <dict>
                <key>name</key>
                <string>string.quoted.single.js</string>
                <key>begin</key>
                <string>'</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(\')|((?:[^\\\n])$)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>invalid.illegal.newline.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#string-character-escape</string>
                    </dict>
                </array>
            </dict>
            <key>string-character-escape</key>
            <dict>
                <key>name</key>
                <string>constant.character.escape.js</string>
                <key>match</key>
                <string>
                    \\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\{[0-9A-Fa-f]+\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)
                </string>
            </dict>
            <key>template</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#template-call</string>
                    </dict>
                    <dict>
                        <key>contentName</key>
                        <string>string.template.js</string>
                        <key>begin</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)?(`)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.name.function.tagged-template.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    string.template.js
                                    punctuation.definition.string.template.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>`</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    string.template.js
                                    punctuation.definition.string.template.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#template-substitution-element</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string-character-escape</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>template-call</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(?=(([_$[:alpha:]][_$[:alnum:]]*\s*\??\.\s*)*|(\??\.\s*)?)([_$[:alpha:]][_$[:alnum:]]*)(&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))(([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;)*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;\s*)?`)</string>
                        <key>end</key>
                        <string>(?=`)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string>
                                    (?=(([_$[:alpha:]][_$[:alnum:]]*\s*\??\.\s*)*|(\??\.\s*)?)([_$[:alpha:]][_$[:alnum:]]*))
                                </string>
                                <key>end</key>
                                <string
                                >(?=(&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))(([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;)*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;\s*)?`)</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>
                                            #support-function-call-identifiers
                                        </string>
                                    </dict>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            entity.name.function.tagged-template.js
                                        </string>
                                        <key>match</key>
                                        <string>
                                            ([_$[:alpha:]][_$[:alnum:]]*)
                                        </string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string
                        >([_$[:alpha:]][_$[:alnum:]]*)?\s*(?=(&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))(([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;|\&lt;\s*(((keyof|infer|typeof|readonly)\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))([^&lt;&gt;\(]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(?&lt;==)\&gt;)*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;\s*)`)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.name.function.tagged-template.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=`)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>template-substitution-element</key>
            <dict>
                <key>name</key>
                <string>meta.template.expression.js</string>
                <key>begin</key>
                <string>\$\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.template-expression.begin.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.template-expression.end.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#expression</string>
                    </dict>
                </array>
                <key>contentName</key>
                <string>meta.embedded.line.js</string>
            </dict>
            <key>type-string</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#qstring-single</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#qstring-double</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#template-type</string>
                    </dict>
                </array>
            </dict>
            <key>template-type</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#template-call</string>
                    </dict>
                    <dict>
                        <key>contentName</key>
                        <string>string.template.js</string>
                        <key>begin</key>
                        <string>([_$[:alpha:]][_$[:alnum:]]*)?(`)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.name.function.tagged-template.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    string.template.js
                                    punctuation.definition.string.template.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>`</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    string.template.js
                                    punctuation.definition.string.template.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>
                                    #template-type-substitution-element
                                </string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string-character-escape</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>template-type-substitution-element</key>
            <dict>
                <key>name</key>
                <string>meta.template.expression.js</string>
                <key>begin</key>
                <string>\$\{</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.template-expression.begin.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.definition.template-expression.end.js
                        </string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#type</string>
                    </dict>
                </array>
                <key>contentName</key>
                <string>meta.embedded.line.js</string>
            </dict>
            <key>regex</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>string.regexp.js</string>
                        <key>begin</key>
                        <string
                        >(?&lt;!\+\+|--|})(?&lt;=[=(:,\[?+!]|^return|[^\._$[:alnum:]]return|^case|[^\._$[:alnum:]]case|=&gt;|&amp;&amp;|\|\||\*\/)\s*(\/)(?![\/*])(?=(?:[^\/\\\[\()]|\\.|\[([^\]\\]|\\.)+\]|\(([^\)\\]|\\.)+\))+\/([dgimsuvy]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.string.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(/)([dgimsuvy]*)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.string.end.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.other.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#regexp</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>string.regexp.js</string>
                        <key>begin</key>
                        <string
                        >((?&lt;![_$[:alnum:])\]]|\+\+|--|}|\*\/)|((?&lt;=^return|[^\._$[:alnum:]]return|^case|[^\._$[:alnum:]]case))\s*)\/(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)*\])+\/([dgimsuvy]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.string.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(/)([dgimsuvy]*)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.string.end.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.other.js</string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#regexp</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>regexp</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.anchor.regexp</string>
                        <key>match</key>
                        <string>\\[bB]|\^|\$</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string
                        >\\[1-9]\d*|\\k&lt;([a-zA-Z_$][\w$]*)&gt;</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.other.back-reference.regexp
                                </string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.regexp</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.quantifier.regexp</string>
                        <key>match</key>
                        <string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>keyword.operator.or.regexp</string>
                        <key>match</key>
                        <string>\|</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.group.assertion.regexp</string>
                        <key>begin</key>
                        <string>(\()((\?=)|(\?!)|(\?&lt;=)|(\?&lt;!))</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.group.regexp
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.group.assertion.regexp
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.assertion.look-ahead.regexp
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.assertion.negative-look-ahead.regexp
                                </string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.assertion.look-behind.regexp
                                </string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    meta.assertion.negative-look-behind.regexp
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(\))</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.group.regexp
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#regexp</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.group.regexp</string>
                        <key>begin</key>
                        <string
                        >\((?:(\?:)|(?:\?&lt;([a-zA-Z_$][\w$]*)&gt;))?</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.group.regexp
                                </string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.group.no-capture.regexp
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.regexp</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.group.regexp
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#regexp</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            constant.other.character-class.set.regexp
                        </string>
                        <key>begin</key>
                        <string>(\[)(\^)?</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.character-class.regexp
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    keyword.operator.negation.regexp
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(\])</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.character-class.regexp
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>name</key>
                                <string>
                                    constant.other.character-class.range.regexp
                                </string>
                                <key>match</key>
                                <string>
                                    (?:.|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))
                                </string>
                                <key>captures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            constant.character.numeric.regexp
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            constant.character.control.regexp
                                        </string>
                                    </dict>
                                    <key>3</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            constant.character.escape.backslash.regexp
                                        </string>
                                    </dict>
                                    <key>4</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            constant.character.numeric.regexp
                                        </string>
                                    </dict>
                                    <key>5</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            constant.character.control.regexp
                                        </string>
                                    </dict>
                                    <key>6</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            constant.character.escape.backslash.regexp
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#regex-character-class</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#regex-character-class</string>
                    </dict>
                </array>
            </dict>
            <key>regex-character-class</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.other.character-class.regexp</string>
                        <key>match</key>
                        <string>\\[wWsSdDtrnvf]|\.</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.character.numeric.regexp</string>
                        <key>match</key>
                        <string>
                            \\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})
                        </string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>constant.character.control.regexp</string>
                        <key>match</key>
                        <string>\\c[A-Z]</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>
                            constant.character.escape.backslash.regexp
                        </string>
                        <key>match</key>
                        <string>\\.</string>
                    </dict>
                </array>
            </dict>
            <key>comment</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>comment.block.documentation.js</string>
                        <key>begin</key>
                        <string>/\*\*(?!/)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.comment.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\*/</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.comment.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#docblock</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>comment.block.js</string>
                        <key>begin</key>
                        <string>(/\*)(?:\s*((@)internal)(?=\s|(\*/)))?</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.comment.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    storage.type.internaldeclaration.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.decorator.internaldeclaration.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\*/</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.comment.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>
                            (^[ \t]+)?((//)(?:\s*((@)internal)(?=\s|$))?)
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.whitespace.comment.leading.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>comment.line.double-slash.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.comment.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    storage.type.internaldeclaration.js
                                </string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.decorator.internaldeclaration.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=$)</string>
                        <key>contentName</key>
                        <string>comment.line.double-slash.js</string>
                    </dict>
                </array>
            </dict>
            <key>single-line-comment-consuming-line-ending</key>
            <dict>
                <key>begin</key>
                <string>(^[ \t]+)?((//)(?:\s*((@)internal)(?=\s|$))?)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.whitespace.comment.leading.js
                        </string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>comment.line.double-slash.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.comment.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.internaldeclaration.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>
                            punctuation.decorator.internaldeclaration.js
                        </string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?=^)</string>
                <key>contentName</key>
                <string>comment.line.double-slash.js</string>
            </dict>
            <key>directives</key>
            <dict>
                <key>name</key>
                <string>comment.line.triple-slash.directive.js</string>
                <key>begin</key>
                <string
                >^(///)\s*(?=&lt;(reference|amd-dependency|amd-module)(\s+(path|types|no-default-lib|lib|name|resolution-mode)\s*=\s*((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)))+\s*/&gt;\s*$)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.comment.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.tag.js</string>
                        <key>begin</key>
                        <string
                        >(&lt;)(reference|amd-dependency|amd-module)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.tag.directive.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.tag.directive.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>/&gt;</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.tag.directive.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>name</key>
                                <string>
                                    entity.other.attribute-name.directive.js
                                </string>
                                <key>match</key>
                                <string>
                                    path|types|no-default-lib|lib|name|resolution-mode
                                </string>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.assignment.js</string>
                                <key>match</key>
                                <string>=</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>docblock</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)
((@)(?:access|api))
\s+
(private|protected|public)
\b
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    constant.language.access-type.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?x)
((@)author)
\s+
(
  [^@\s&lt;&gt;*/]
  (?:[^@&lt;&gt;*/]|\*[^/])*
)
(?:
  \s*
  (&lt;)
  ([^&gt;\s]+)
  (&gt;)
)?</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.angle.begin.jsdoc
                                </string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    constant.other.email.link.underline.jsdoc
                                </string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.angle.end.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?x)
((@)borrows) \s+
((?:[^@\s*/]|\*[^/])+)    # &lt;that namepath&gt;
\s+ (as) \s+              # as
((?:[^@\s*/]|\*[^/])+)    # &lt;this namepath&gt;</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.operator.control.jsdoc</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.example.jsdoc</string>
                        <key>begin</key>
                        <string>((@)example)\s+</string>
                        <key>end</key>
                        <string>(?=@|\*/)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>match</key>
                                <string>^\s\*\s+</string>
                            </dict>
                            <dict>
                                <key>contentName</key>
                                <string>
                                    constant.other.description.jsdoc
                                </string>
                                <key>begin</key>
                                <string>\G(&lt;)caption(&gt;)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            entity.name.tag.inline.jsdoc
                                        </string>
                                    </dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.bracket.angle.begin.jsdoc
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.bracket.angle.end.jsdoc
                                        </string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>(&lt;/)caption(&gt;)|(?=\*/)</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            entity.name.tag.inline.jsdoc
                                        </string>
                                    </dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.bracket.angle.begin.jsdoc
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.bracket.angle.end.jsdoc
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>[^\s@*](?:[^*]|\*[^/])*</string>
                                <key>captures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>source.embedded.js</string>
                                    </dict>
                                </dict>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x) ((@)kind) \s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \b
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    constant.language.symbol-type.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)
((@)see)
\s+
(?:
  # URL
  (
    (?=https?://)
    (?:[^\s*]|\*[^/])+
  )
  |
  # JSDoc namepath
  (
    (?!
      # Avoid matching bare URIs (also acceptable as links)
      https?://
      |
      # Avoid matching {@inline tags}; we match those below
      (?:\[[^\[\]]*\])? # Possible description [preceding]{@tag}
      {@(?:link|linkcode|linkplain|tutorial)\b
    )
    # Matched namepath
    (?:[^@\s*/]|\*[^/])+
  )
)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    variable.other.link.underline.jsdoc
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)
((@)template)
\s+
# One or more valid identifiers
(
  [A-Za-z_$]         # First character: non-numeric word character
  [\w$.\[\]]*        # Rest of identifier
  (?:                # Possible list of additional identifiers
    \s* , \s*
    [A-Za-z_$]
    [\w$.\[\]]*
  )*
)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?x)((@)template)\s+(?={)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#jsdoctype</string>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                                <key>match</key>
                                <string>([A-Za-z_$][\w$.\[\]]*)</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)
(
  (@)
  (?:arg|argument|const|constant|member|namespace|param|var)
)
\s+
(
  [A-Za-z_$]
  [\w$.\[\]]*
)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>((@)typedef)\s+(?={)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#jsdoctype</string>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                                <key>match</key>
                                <string>(?:[^@\s*/]|\*[^/])+</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>
                            ((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\s+(?={)
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#jsdoctype</string>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                                <key>match</key>
                                <string>([A-Za-z_$][\w$.\[\]]*)</string>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                                <key>match</key>
                                <string>(?x)
(\[)\s*
[\w$]+
(?:
  (?:\[\])?                                        # Foo[ ].bar properties within an array
  \.                                                # Foo.Bar namespaced parameter
  [\w$]+
)*
(?:
  \s*
  (=)                                                # [foo=bar] Default parameter value
  \s*
  (
    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes
    (?&gt;
      "(?:(?:\*(?!/))|(?:\\(?!"))|[^*\\])*?" |                      # [foo="bar"] Double-quoted
      '(?:(?:\*(?!/))|(?:\\(?!'))|[^*\\])*?' |                      # [foo='bar'] Single-quoted
      \[ (?:(?:\*(?!/))|[^*])*? \] |                                # [foo=[1,2]] Array literal
      (?:(?:\*(?!/))|\s(?!\s*\])|\[.*?(?:\]|(?=\*/))|[^*\s\[\]])*   # Everything else
    )*
  )
)?
\s*(?:(\])((?:[^*\s]|\*[^\s/])+)?|(?=\*/))</string>
                                <key>captures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.optional-value.begin.bracket.square.jsdoc
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            keyword.operator.assignment.jsdoc
                                        </string>
                                    </dict>
                                    <key>3</key>
                                    <dict>
                                        <key>name</key>
                                        <string>source.embedded.js</string>
                                    </dict>
                                    <key>4</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.definition.optional-value.end.bracket.square.jsdoc
                                        </string>
                                    </dict>
                                    <key>5</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            invalid.illegal.syntax.jsdoc
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>
                            (?x)
(
  (@)
  (?:define|enum|exception|export|extends|lends|implements|modifies
  |namespace|private|protected|returns?|satisfies|suppress|this|throws|type
  |yields?)
)
\s+(?={)
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#jsdoctype</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            (?x)
(
  (@)
  (?:alias|augments|callback|constructs|emits|event|fires|exports?
  |extends|external|function|func|host|lends|listens|interface|memberof!?
  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)
)
\s+
(
  (?:
    [^{}@\s*] | \*[^/]
  )+
)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>contentName</key>
                        <string>variable.other.jsdoc</string>
                        <key>begin</key>
                        <string>
                            ((@)(?:default(?:value)?|license|version))\s+(([''"]))
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.string.begin.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(\3)|(?=$|\*/)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.string.end.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            ((@)(?:default(?:value)?|license|tutorial|variation|version))\s+([^\s*]+)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.jsdoc</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>storage.type.class.jsdoc</string>
                        <key>match</key>
                        <string>
                            (?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \b
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#inline-tags</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>
                            ((@)(?:[_$[:alpha:]][_$[:alnum:]]*))(?=\s+)
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.block.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>brackets</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>{</string>
                        <key>end</key>
                        <string>}|(?=\*/)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#brackets</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>\[</string>
                        <key>end</key>
                        <string>\]|(?=\*/)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#brackets</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>inline-tags</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.other.description.jsdoc</string>
                        <key>match</key>
                        <string>
                            (\[)[^\]]+(\])(?={@(?:link|linkcode|linkplain|tutorial))
                        </string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.square.begin.jsdoc
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.square.end.jsdoc
                                </string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.instance.jsdoc</string>
                        <key>begin</key>
                        <string>
                            ({)((@)(?:link(?:code|plain)?|tutorial))\s*
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.curly.begin.jsdoc
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>storage.type.class.jsdoc</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.inline.tag.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>}|(?=\*/)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.curly.end.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>match</key>
                                <string>
                                    \G((?=https?://)(?:[^|}\s*]|\*[/])+)(\|)?
                                </string>
                                <key>captures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            variable.other.link.underline.jsdoc
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.separator.pipe.jsdoc
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>\G((?:[^{}@\s|*]|\*[^/])+)(\|)?</string>
                                <key>captures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            variable.other.description.jsdoc
                                        </string>
                                    </dict>
                                    <key>2</key>
                                    <dict>
                                        <key>name</key>
                                        <string>
                                            punctuation.separator.pipe.jsdoc
                                        </string>
                                    </dict>
                                </dict>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>jsdoctype</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>contentName</key>
                        <string>entity.name.type.instance.jsdoc</string>
                        <key>begin</key>
                        <string>\G({)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.curly.begin.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>((}))\s*|(?=\*/)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.type.instance.jsdoc</string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.bracket.curly.end.jsdoc
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#brackets</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>jsx</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-style</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-without-attributes</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag-without-attributes-in-expression</key>
            <dict>
                <key>begin</key>
                <string
                >(?&lt;!\+\+|--)(?&lt;=[({\[,?=&gt;:*]|&amp;&amp;|\|\||\?|\*\/|^await|[^\._$[:alnum:]]await|^return|[^\._$[:alnum:]]return|^default|[^\._$[:alnum:]]default|^yield|[^\._$[:alnum:]]yield|^)\s*(?=(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?![sS][tT][yY][lL][eE]\b)(?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))?\s*(&gt;))</string>
                <key>end</key>
                <string
                >(?!(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?![sS][tT][yY][lL][eE]\b)(?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))?\s*(&gt;))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-without-attributes</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag-without-attributes</key>
            <dict>
                <key>name</key>
                <string>meta.tag.without-attributes.js</string>
                <key>begin</key>
                <string
                >(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))?\s*(&gt;)</string>
                <key>end</key>
                <string
                >(&lt;/)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))?\s*(&gt;)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.begin.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.namespace.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.namespace.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>support.class.component.js</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.end.js</string>
                    </dict>
                </dict>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.begin.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.namespace.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.namespace.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>support.class.component.js</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.end.js</string>
                    </dict>
                </dict>
                <key>contentName</key>
                <string>meta.jsx.children.js</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-children</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag-in-expression</key>
            <dict>
                <key>begin</key>
                <string>(?x)
  (?&lt;!\+\+|--)(?&lt;=[({\[,?=&gt;:*]|&amp;&amp;|\|\||\?|\*\/|^await|[^\._$[:alnum:]]await|^return|[^\._$[:alnum:]]return|^default|[^\._$[:alnum:]]default|^yield|[^\._$[:alnum:]]yield|^)\s*
  (?!&lt;\s*[_$[:alpha:]][_$[:alnum:]]*((\s+extends\s+[^=&gt;])|,)) # look ahead is not type parameter of arrow
  (?=(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?![sS][tT][yY][lL][eE]\b)(?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))(?=((&lt;\s*)|(\s+))(?!\?)|\/?&gt;))</string>
                <key>end</key>
                <string
                >(?!(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?![sS][tT][yY][lL][eE]\b)(?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))(?=((&lt;\s*)|(\s+))(?!\?)|\/?&gt;))</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag-style</key>
            <dict>
                <key>name</key>
                <string>style.tag.js</string>
                <key>begin</key>
                <string
                >(&lt;)\s*(style)\b(?![^&gt;]*/&gt;)(?=[^&gt;]*&gt;)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.begin.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>(&lt;/)(style)(&gt;)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.begin.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.end.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>(&gt;)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.tag.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=&lt;/style&gt;)</string>
                        <key>contentName</key>
                        <string>source.css</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>source.css</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?&lt;=&lt;style)(?![^&gt;]*/&gt;)</string>
                        <key>end</key>
                        <string>(?=&gt;)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#jsx-tag-attributes</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag</key>
            <dict>
                <key>name</key>
                <string>meta.tag.js</string>
                <key>begin</key>
                <string
                >(?=(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))(?=((&lt;\s*)|(\s+))(?!\?)|\/?&gt;))</string>
                <key>end</key>
                <string
                >(/&gt;)|(?:(&lt;/)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))?\s*(&gt;))</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.end.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.begin.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.namespace.js</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.namespace.js</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.tag.js</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>support.class.component.js</string>
                    </dict>
                    <key>7</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.tag.end.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string
                        >(&lt;)\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?&lt;!\.|-)(:))?((?:(?!children)[a-z][a-z0-9]*|(?:children|(@?[_$[:alpha:]][-_$[:alnum:]]*(?:\.@?[_$[:alpha:]][-_$[:alnum:]]*)*)))(?&lt;!-))(?=((&lt;\s*)|(\s+))(?!\?)|\/?&gt;)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.tag.begin.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.tag.namespace.js</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.separator.namespace.js
                                </string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>entity.name.tag.js</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>support.class.component.js</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=[/]?&gt;)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#comment</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#type-arguments</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#jsx-tag-attributes</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(&gt;)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.tag.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?=&lt;/)</string>
                        <key>contentName</key>
                        <string>meta.jsx.children.js</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#jsx-children</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>jsx-children</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-evaluated-code</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-style</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-children-statements</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-without-attributes</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-entities</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-children-statements</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>(?=\w|\$|//|/\*)</string>
                        <key>end</key>
                        <string>(?=&lt;[a-zA-Z]|&lt;/)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.ripple-js
                                </string>
                            </dict>
                        </dict>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.end.ripple-js
                                </string>
                            </dict>
                        </dict>
                        <key>contentName</key>
                        <string>source.js.embedded.ripple-isolated</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#component-statements</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>jsx-attribute-expression</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.identifier.tracked.js</string>
                        <key>match</key>
                        <string>(@)([_$[:alpha:]][_$[:alnum:]]*)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#server-member-expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-ref-modifier</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionWithoutIdentifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#identifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionPunctuations</string>
                    </dict>
                </array>
            </dict>
            <key>non-jsx-expression</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.unbox.tracked.paren.js</string>
                        <key>begin</key>
                        <string>(\@)(\()</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.end.js
                                </string>
                            </dict>
                        </dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>meta.identifier.tracked.js</string>
                        <key>match</key>
                        <string>(@)([_$[:alpha:]][_$[:alnum:]]*)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.section.embedded.begin.js
                                </string>
                            </dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>variable.other.js</string>
                            </dict>
                        </dict>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#server-member-expression</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-html-modifier</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionWithoutIdentifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#identifiers</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#expressionPunctuations</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-evaluated-code</key>
            <dict>
                <key>contentName</key>
                <string>
                    meta.embedded.expression.js source.js.embedded.ripple
                </string>
                <key>begin</key>
                <string>\{</string>
                <key>end</key>
                <string>\}</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.section.embedded.begin.js</string>
                    </dict>
                </dict>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.section.embedded.end.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-attribute-expression</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-entities</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.character.entity.js</string>
                        <key>match</key>
                        <string
                        >(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.entity.js
                                </string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>
                                    punctuation.definition.entity.js
                                </string>
                            </dict>
                        </dict>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag-attributes</key>
            <dict>
                <key>name</key>
                <string>meta.tag.attributes.js</string>
                <key>begin</key>
                <string>\s+</string>
                <key>end</key>
                <string>(?=[/]?&gt;)</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#comment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-attribute-name</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-attribute-assignment</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-string-double-quoted</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-string-single-quoted</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-evaluated-code</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#jsx-tag-attributes-illegal</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-tag-attribute-name</key>
            <dict>
                <key>match</key>
                <string>(?x)
  \s*
  (?:([_$[:alpha:]][-_$[:alnum:].]*)(:))?
  ([_$[:alpha:]][-_$[:alnum:]]*)
  (?=\s|=|/?&gt;|/\*|//)</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>
                            entity.other.attribute-name.namespace.js
                        </string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.namespace.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>entity.other.attribute-name.js</string>
                    </dict>
                </dict>
            </dict>
            <key>jsx-tag-attribute-assignment</key>
            <dict>
                <key>name</key>
                <string>keyword.operator.assignment.js</string>
                <key>match</key>
                <string>=(?=\s*(?:'|"|{|/\*|//|\n))</string>
            </dict>
            <key>jsx-string-double-quoted</key>
            <dict>
                <key>name</key>
                <string>string.quoted.double.js</string>
                <key>begin</key>
                <string>"</string>
                <key>end</key>
                <string>"</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.js</string>
                    </dict>
                </dict>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-entities</string>
                    </dict>
                </array>
            </dict>
            <key>jsx-string-single-quoted</key>
            <dict>
                <key>name</key>
                <string>string.quoted.single.js</string>
                <key>begin</key>
                <string>'</string>
                <key>end</key>
                <string>'</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.js</string>
                    </dict>
                </dict>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#jsx-entities</string>
                    </dict>
                </array>
            </dict>
            <key>server-block</key>
            <dict>
                <key>name</key>
                <string>meta.server-block.js</string>
                <key>begin</key>
                <string>(#server)\s*(\{)</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.server.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\}</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.block.js</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#statements</string>
                    </dict>
                </array>
            </dict>
            <key>server-member-expression</key>
            <dict>
                <key>name</key>
                <string>meta.server-member-expression.js</string>
                <key>match</key>
                <string>(#server)(\.)([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.server.js</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.accessor.js</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.js</string>
                    </dict>
                </dict>
            </dict>
            <key>jsx-ref-modifier</key>
            <dict>
                <key>name</key>
                <string>storage.modifier.js</string>
                <key>match</key>
                <string>\b(ref)(?=\s+(?:[_$[:alpha:]]|\())</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                </dict>
            </dict>
            <key>jsx-html-modifier</key>
            <dict>
                <key>name</key>
                <string>storage.modifier.js</string>
                <key>match</key>
                <string>\b(html)(?=\s+[_$[:alpha:]])</string>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.modifier.js</string>
                    </dict>
                </dict>
            </dict>
            <key>jsx-tag-attributes-illegal</key>
            <dict>
                <key>name</key>
                <string>invalid.illegal.attribute.js</string>
                <key>match</key>
                <string>\S+</string>
            </dict>
        </dict>
    </dict>
</plist>
